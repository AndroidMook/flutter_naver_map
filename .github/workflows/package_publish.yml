name: Publish to Pub.dev and Create Release

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  if_merged_publishing:
    if: ${{ (github.event.pull_request.merged == true) && (contains(github.event.pull_request.labels.*.name, 'release')) }}
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@main

      - name: 'Update version.json'
        run: dart run ./tool/update_version.dart

      - name: 'Get version from pubspec.yaml'
        id: version
        run: |
          VERSION=$(grep "^version:" pubspec.yaml | sed 's/version: //')
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: 'Publish Package'
        uses: k-paxian/dart-package-publisher@master
        with:
          accessToken: ${{ secrets.OAUTH_ACCESS_TOKEN }}
          refreshToken: ${{ secrets.OAUTH_REFRESH_TOKEN }}
          flutter: true
          format: true
          skipTests: true
          force: true

      - name: 'Extract PR body for release notes'
        id: pr_body
        run: |
          PR_BODY="${{ github.event.pull_request.body }}"
          echo "PR_BODY<<EOF" >> $GITHUB_OUTPUT
          echo "$PR_BODY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: 'Create GitHub Release'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.VERSION }}
          release_name: Release v${{ steps.version.outputs.VERSION }}
          body: |
            ${{ steps.pr_body.outputs.PR_BODY }}
            
            ---
            This release was automatically created from PR #${{ github.event.pull_request.number }}
          draft: false
          prerelease: false
